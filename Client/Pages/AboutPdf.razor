@using Syncfusion.Pdf
@using Syncfusion.Pdf.Grid;
@using Syncfusion.Drawing;
@using Syncfusion.Pdf.Graphics;
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO;
@inject WeatherForecastService ForecastService


@if (Language == "English")
{

    <p>Our Plan in English</p>
    <button @onclick="@DownloadFileFromURL">
        Download
    </button>
}
else
{

    <p>الخطة باللغة العربية</p>
    <button @onclick="@DownloadFileFromURL">
        تحميل
    </button>
}

@code {

    [Parameter]
    public string Language { get; set; }

    private async Task DownloadFileFromURL()
    {


        @* var fileURL = "";

            @if (Language == "English")
            {
                fileURL = "https://drive.google.com/file/d/1T1oITRgZWnkzCOd99lvGYEAzttfKL8Zb/view?usp=sharing";
            }
            else
            {
                fileURL = "https://github.com/Aml-Abbas/AljabhaAldemokratiaAlshaabia/blob/master/Shared/Resources/Arabic.txt";
            }


            // Download the PDF document
            JS.SaveAs("Sample.pdf", fileURL);
        *@

    int paragraphAfterSpacing = 8;
    int cellMargin = 8;
    PdfDocument pdfDocument = new PdfDocument();
    //Add Page to the PDF document.
    PdfPage page = pdfDocument.Pages.Add();

    //Create a new font.
    PdfStandardFont font = new PdfStandardFont(PdfFontFamily.TimesRoman, 16);

    //Create a text element to draw a text in PDF page.
    PdfTextElement title = new PdfTextElement("Weather Forecast", font, PdfBrushes.Black);
    PdfLayoutResult result = title.Draw(page, new PointF(0, 0));


    PdfStandardFont contentFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 12);
    PdfTextElement content = new PdfTextElement("This component demonstrates fetching data from a client side and Exporting the data to PDF document using Syncfusion .NET PDF library.", contentFont, PdfBrushes.Black);
    PdfLayoutFormat format = new PdfLayoutFormat();
    format.Layout = PdfLayoutType.Paginate;

    //Draw a text to the PDF document.
    result = content.Draw(page, new RectangleF(0, result.Bounds.Bottom + paragraphAfterSpacing, page.GetClientSize().Width, page.GetClientSize().Height), format);

    //Create a PdfGrid.
    PdfGrid pdfGrid = new PdfGrid();
    pdfGrid.Style.CellPadding.Left = cellMargin;
    pdfGrid.Style.CellPadding.Right = cellMargin;

    //Applying built-in style to the PDF grid
    pdfGrid.ApplyBuiltinStyle(PdfGridBuiltinStyle.GridTable4Accent1);

    //Assign data source.
    pdfGrid.DataSource = await ForecastService.GetForecastAsync(DateTime.Now);

    pdfGrid.Style.Font = contentFont;

    //Draw PDF grid into the PDF page.
    pdfGrid.Draw(page, new Syncfusion.Drawing.PointF(0, result.Bounds.Bottom + paragraphAfterSpacing));

    MemoryStream memoryStream = new MemoryStream();

    // Save the PDF document.
    pdfDocument.Save(memoryStream);

    // Download the PDF document
    await JS.SaveAs("Sample.pdf", memoryStream.ToArray());

}

}
